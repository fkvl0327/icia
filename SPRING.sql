/* SPRING MVC PROJECT 
    ITEM : MULTIPLEX RESERVATION SYTEM
    NEEDS______
    1. 상영관 개수의 동적 처리
    2. 각 상영관 좌석 수의 동적처리
    3. 좌석의 동적 배치
    4. WEB을 이용한 예약처리
    5. WEB을 이용한 영화관 관리
    6. 연령별 요금의 동적처리
*/
/* MULTIPLEX TABLESPACE CREATION :: SYS */
-- CREATION
CREATE TABLESPACE MULTIPLEX
DATAFILE 'D:\Spring\database\TS\MULTIPLEX_01.ORA'
SIZE 10M AUTOEXTEND ON NEXT 5M MAXSIZE 100M;

-- TABLESPACE CHECK VIEW :: SYS
  CREATE OR REPLACE VIEW TSINFO
  AS
  SELECT TS.TABLESPACE_NAME AS "TABLESPACE",
         TS.STATUS AS "TS_STATUS",
         TS.CONTENTS AS "TYPE",
         DF.FILE_NAME AS "FILE_NAME",
         DF.BYTES /(1024*1024) || 'M' AS "SIZE",
         DF.STATUS AS "DF_STATUS",
         FS.BYTES /(1024*1024) || 'M' AS "AVAILABLE"         
  FROM DBA_TABLESPACES TS INNER JOIN DBA_DATA_FILES DF ON TS.TABLESPACE_NAME = DF.TABLESPACE_NAME
                          INNER JOIN DBA_FREE_SPACE FS ON TS.TABLESPACE_NAME = FS.TABLESPACE_NAME;
  -->> GRANT
  GRANT ALL ON SYS.TSINFO TO ADM;
  CREATE PUBLIC SYNONYM TSINFO FOR SYS.TSINFO;
  
/* TEAM DBA CREATION : SYS */
-- CREATION
CREATE USER ADM IDENTIFIED BY "5678"
DEFAULT TABLESPACE MULTIPLEX
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON MULTIPLEX;

-- PRIVILEAGE
GRANT DBA TO ADM;

-- USER CHECK VIEW :: SYS
CREATE OR REPLACE VIEW USERINFO
AS
SELECT USERNAME AS "USERNAME", 
       ACCOUNT_STATUS AS "STATUS",  
       DEFAULT_TABLESPACE AS "TABLESPACE",
       GRANTED_ROLE AS "ROLE"
FROM DBA_USERS DU INNER JOIN DBA_ROLE_PRIVS RP ON DU.USERNAME = RP.GRANTEE;
   
  -->> GRANT :: SYS
  GRANT ALL ON SYS.USERINFO TO ADM;
  CREATE PUBLIC SYNONYM USERINFO FOR SYS.USERINFO;
       
-- USER CHECK :: DBA
SELECT * FROM USERINFO WHERE USERNAME='ADM';
-- TABLESPACE CHECK :: DBA
SELECT * FROM TSINFO WHERE TABLESPACE = 'MULTIPLEX';

/* TEAM DEV CREATION : TEAM DBA */
-- CREATION
CREATE USER DEVELOPER IDENTIFIED BY "5678"
DEFAULT TABLESPACE MULTIPLEX
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON MULTIPLEX;
-- GRANT
GRANT CONNECT, RESOURCE TO DEVELOPER;


/*  TABLE DESIGN 
    PART 1. KEY ENTITY
            -1. CUSTOMER(ST)
                : ST_ID(PK)[NV], ST_NAME[NV], ST_PASSWORD[NV], ST_PHONE[NC11]
            -2. THEATER(TH)
                : TH_CODE(PK)[NC1], TH_NAME[NV], TH_ADDR[NV]
            -3. MOVIE(MV)
                : MV_CODE(PK)[NC8], MV_NAME[NV], MV_GRADE[NC1], MV_STATUS[NC1], MV_IMAGE[NV], MV_COMMENTS[NV NULL]
                
    PART2. MAIN ENTITY
            2-1. SCREEN(SC)
                : SC_THCODE(FK, PK)[NC1], SC_NUMBER(PK)[NC2], SC_SEATS[N3], SC_COLS[N2], SC_ROWS[N2]
            2-1-1. INACTIVE SEAT(IS)
                : IS_SCTHCODE(+FK, PK)[NC1], SC_NUMBER(+FK, PK)[NC2], IS_SEAT(PK)[N3], IS_TYPE[NC1]
            3-1. SCREENING MOVIE(SI)
                : SI_MVCODE(FK, PK)[NC8], SI_SCTHCODE(+FK, PK)[NC1], SI_SCNUMBER(+FK, PK)[NC2], 
                  SI_DATETIME(PK)[DATE]
             -3. RESERVATION(RV)
                : RV_CODE(PK)[NC14], RV_SIMVCODE(+FK)[NC8], RV_SISCTHCODE(+FK)[NC1], RV_SISCNUMBER(+FK)[NC2], 
                  (YYYYMMDDNNNNNN)--> DATE DEFAULT SYSDATE
                  RV_SIDATETIME(+FK)[DATE]
                  
        
    PART3. ACTION ENTITY
             -1. RESERVATION DETAIL(RD)
                : RD_RVCODE(FK, PK)[NC14], RD_SEAT(PK)[N3], RD_TYPE[NC1]
*/
