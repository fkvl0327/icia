/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-01-08 05:16:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class goodsDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("    <html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("        <script src=\"https://kit.fontawesome.com/301043e4a8.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <title>GoodsDetail Page</title>\r\n");
      out.write("        <link rel=\"icon\" type=\"image/png\" href=\"image/icia-logo.png\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style_goods.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("\t<body>\r\n");
      out.write("        <!-- Header -->\r\n");
      out.write("\t    <header id=\"header\">\r\n");
      out.write("\t        <div class=\"search\">\r\n");
      out.write("\t            <span class=\"search__logo\">\r\n");
      out.write("\t                <a href=\"https://www.icia.co.kr/\"><img id=\"logo2\" src=\"image/icia-logo2.png\"></a>\r\n");
      out.write("\t            </span>            \r\n");
      out.write("\t            <span class=\"search__input\">\r\n");
      out.write("\t                <input type=\"text\" name=\"word\" id=\"word\">\r\n");
      out.write("\t                <button type=\"button\" onclick=\"searchGoods()\" id=\"button\"><i class=\"fas fa-search\"></i></button>\r\n");
      out.write("\t            </span>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </header>   \r\n");
      out.write("\t\t    \r\n");
      out.write("\t    <!-- Section -->\r\n");
      out.write("\t    <section id=\"goodsdeatil\">\r\n");
      out.write("\t        <!-- 상품정보 -->\r\n");
      out.write("\t        <div id=\"title\">\r\n");
      out.write("\t            <!-- 상품이미지 -->\r\n");
      out.write("\t            <div id=\"goodsImg\" class=\"goodsinfo\">\r\n");
      out.write("\t            \t<img id=\"goodsImg__img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${goodsImage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <!--상품개요  -->\r\n");
      out.write("\t            <div id=\"goodsSummary\" class=\"goodsinfo\">\r\n");
      out.write("\t                <!-- 상품명 -->\r\n");
      out.write("\t                <div id=\"goods-name\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("\t                <!-- 상품가격 -->\r\n");
      out.write("\t                <div id=\"goods-price\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</div>       \r\n");
      out.write("\t                <!-- 상품옵션선택 -->\r\n");
      out.write("\t                <div id=\"option\">\r\n");
      out.write("\t                    <div class=\"option__label\"><label for=\"opt\">옵션선택</label></div>\r\n");
      out.write("\t                    <div class=\"options\">\r\n");
      out.write("\t                    \t<input type=\"text\" name=\"num\" id=\"num\" value=\"1\" readonly />\r\n");
      out.write("\t                    \t<input type=\"button\" value=\"+\" onClick=\"plus()\"/>\r\n");
      out.write("\t                    \t<input type=\"button\" value=\"-\" onClick=\"minus()\"/>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<input type=\"button\" value=\"+\" class=\"opt\" onClick=\"change(1)\"/> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<input type=\"button\" value=\"-\" class=\"opt\" onClick=\"change(-1)\"/> -->\r\n");
      out.write("\t                    </div>                                                                                                                      \r\n");
      out.write("\t                </div>\r\n");
      out.write("\t                <!-- 장바구니 | 구매하기 -->\r\n");
      out.write("\t                <div id=\"order\">\r\n");
      out.write("\t                    <!-- 서버 -->\r\n");
      out.write("\t                    <span class=\"order__Btn\"><input class=\"order__input c1\" type=\"button\" value=\"장바구니\" onClick=\"order(true,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gInfo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\"></span>\r\n");
      out.write("\t                    <span class=\"order__Btn\"><input class=\"order__input c2\" type=\"button\" value=\"구매하기\" onClick=\"order(false,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gInfo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\"></span>\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>        \r\n");
      out.write("\t        <!-- 상품상세정보 :: image -->\r\n");
      out.write("\t        <div id=\"detail\">\r\n");
      out.write("\t        \t<div id=\"detail__img\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${detailImage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></div>\r\n");
      out.write("\t            <div id=\"detail__seller\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seller }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\t            \r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </section>         \r\n");
      out.write("\t         \r\n");
      out.write("        <!-- Footer -->\r\n");
      out.write("        <footer id=\"footer\">\r\n");
      out.write("            <span class=\"footer__icon\"><a href=\"https://www.icia.co.kr/\"><img id=\"footer__icon\" src=\"image/icia-logo.png\" alt=\"\"></a></span>\r\n");
      out.write("            <span class=\"footer__rights\">Copyright <b>Sookyeong Lee.</b> All Rights Reserved.</span>\r\n");
      out.write("        </footer>        \t        \r\n");
      out.write("\t    </body>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction order(type, gInfo){\r\n");
      out.write("\t\t\tvar form = document.createElement(\"form\");\r\n");
      out.write("\t\t\tform.method=\"post\";\r\n");
      out.write("\t\t\tform.action=(type)? \"Basket\":\"Order\";\r\n");
      out.write("\t\t\t//gInfo --> id:gocode:secode\r\n");
      out.write("\t\t\tvar info = gInfo.split(\":\");\r\n");
      out.write("\t\t\tfor(index=0; index<info.length+1; index++){\r\n");
      out.write("\t\t\t\tvar input = document.createElement(\"input\");\r\n");
      out.write("\t\t\t\tinput.name = \"gInfo\";\r\n");
      out.write("\t\t\t\tinput.value = (index==info.length)? document.getElementsByName(\"num\")[0].value: info[index];\r\n");
      out.write("\t\t\t\tform.appendChild(input);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// for문에서 index가 마지막일 때 num을 gInfo에 더하는 방식도 가능하다\r\n");
      out.write("\t\t\tform.appendChild(document.getElementById(\"num\"));\r\n");
      out.write("\t\t\tdocument.body.appendChild(form);\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction searchGoods(){\r\n");
      out.write("\t\t\tvar f=document.createElement(\"form\");\r\n");
      out.write("\t\t\tf.action = \"Search\";\r\n");
      out.write("\t\t\tf.method = \"post\";\r\n");
      out.write("\t\t\tf.appendChild(document.getElementsByName(\"word\")[0]);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.body.appendChild(f);\r\n");
      out.write("\t\t\tf.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction plus(){\r\n");
      out.write("\t\t\tvar num = document.getElementById(\"num\");\r\n");
      out.write("\t\t\tvar val = parseInt(num.value);\r\n");
      out.write("\t\t\tnum.value = (val += 1);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction minus(){\r\n");
      out.write("\t\t\tvar num = document.getElementById(\"num\");\r\n");
      out.write("\t\t\tif(num.value<=1){\r\n");
      out.write("\t\t\t\talert(\"1보다 작은 값을 선택할 수 없습니다.\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\tnum.value -= 1;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("// \t\tfunction change(qty){\r\n");
      out.write("// \t\t\tvar opt = document.getElementsByName(\"opt\")[0];\r\n");
      out.write("// \t\t\tvar val = parseInt(opt.value);\r\n");
      out.write("// \t\t\topt.value = ((val+=qty)==0)? 1: val;\r\n");
      out.write("// \t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("\t</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
